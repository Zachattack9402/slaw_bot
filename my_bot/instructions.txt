**Most packages are found through the video tutorials. Only additional packages and downloads not mentioned in the vidoes will be added here**


build robot enviorment

cd dev_ws
colcon build --symlink-install
source install/setup.bash

launch robot

just enviorment:
 ros2 launch my_bot rsp.launch.py

simulation:
 ros2 launch my_bot launch_sim.launch.py

simulation with world:
 ros2 launch my_bot launch_sim.launch.py world:=src/my_bot/worlds/cones.world

control with gazebo
 ros2 run telop_twist_keybaord telop_twist_keybaord
 
with ros2_control
   ros2 run teleop_twist_keyboard teleop_twist_keyboard --ros-args -r /cmd_vel:=/diff_cont/cmd_vel_unstamped
  
display hardware interfaces 
 ros2 control list_hardware_interfaces

SLAM:
ros2 launch slam_toolbox online_async_launch.py slam_params_file:=./src/my_bot/config/mapper_params_online_async.yaml use_sim_time:=true

ros2 run nav2_map_server map_server --ros-args -p yaml_filename:=my_map_save.yaml -p use_sim_time:=true
ros2 run nav2_util lifecycle_bringup map_server

ros2 run nav2_amcl amcl --ros-args -p use_sim_time:=true
ros2 run nav2_util lifecycle_bringup amcl

NAV2 STUFF:

ros2 launch nav2_bringup navigation_launch.py use_sim_time:=true

ros2 run twist_mux twist_mux --ros-args --params-file ./src/my_bot/config/twist_mux.yaml -r cmd_vel_out:=diff_cont/cmd_vel_unstamped

Steps to Success:
1 launch robot
2 start Lidar(physical robot only)
3 launch slam toolbox(for lidar data proccessing)
4 run twist_mux

Lidar:

ros2 run rplidar_ros rplidar_composition --ros-args
-p serial_port:=/dev/ttyUSB0 -p frame_id:=laser_frame
-p angle_compensate:=true -p scan_mode:=Standard
-p serial_baudrate:=115200
